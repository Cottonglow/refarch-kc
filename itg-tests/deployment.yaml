---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kcontainer-integration-tests-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
        app: kcontainer-integration-tests
        role: consumer
  template:
    metadata:
      labels:
        app: kcontainer-integration-tests
        role: consumer
    spec:
      serviceAccountName: kcontainer-runtime
      imagePullSecrets:
        - name:
      containers:
      - name: "integration-tests"
        image: "osowski/python-tools:latest"
        imagePullPolicy: Always
        command: ["python3", "/home/OrdersPython/OrderConsumer.py", "MMMMMMMMM"]
        ports:
        - containerPort: 5000
        resources:
          requests:
            cpu: "200m"
            memory: "300Mi"
        env:
          - name: KAFKA_ENV
            value: "IBMCLOUD"
          - name: KAFKA_BROKERS
            valueFrom:
              configMapKeyRef:
                name: "reo-kafka-brokers"
                key: brokers
          - name: KAFKA_APIKEY
            valueFrom:
              secretKeyRef:
                name: eventstreams-apikey
                key: binding
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kcontainer-integration-tests-producer
spec:
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: kcontainer-runtime
      imagePullSecrets:
        - name:
      containers:
      - name: "producer"
        image: "osowski/python-tools:latest"
        imagePullPolicy: Always
        command: ["python3", "/home/es-it/ProducerOrderEvents.py", "MMMMMMMMM"]
        ports:
        - containerPort: 5000
        resources:
          requests:
            cpu: "200m"
            memory: "300Mi"
        env:
          - name: KAFKA_ENV
            value: "IBMCLOUD"
          - name: KAFKA_BROKERS
            valueFrom:
              configMapKeyRef:
                name: "reo-kafka-brokers"
                key: brokers
          - name: KAFKA_APIKEY
            valueFrom:
              secretKeyRef:
                name: eventstreams-apikey
                key: binding
      #initContainers:
      #- name: "init-producer"
      #  image: "osowski/python-tools:latest"
      #  imagePullPolicy: Always
      #  command: ["python3", "/home/es-it/ProducerOrderEvents.py", "7890"]
      #  resources:
      #    requests:
      #      cpu: "200m"
      #      memory: "300Mi"
      #  env:
      #    - name: KAFKA_ENV
      #      value: "IBMCLOUD"
      #    - name: KAFKA_BROKERS
      #      valueFrom:
      #        configMapKeyRef:
      #          name: "reo-kafka-brokers"
      #          key: brokers
      #    - name: KAFKA_APIKEY
      #      valueFrom:
      #        secretKeyRef:
      #          name: eventstreams-apikey
      #          key: binding
      #- name: "init-consumer"
      #  image: "osowski/python-tools:latest"
      #  imagePullPolicy: Always
      #  command: ["python3", "/home/OrdersPython/OrderConsumer.py", "7890"]
      #  resources:
      #    requests:
      #      cpu: "200m"
      #      memory: "300Mi"
      #  env:
      #    - name: KAFKA_ENV
      #      value: "IBMCLOUD"
      #    - name: KAFKA_BROKERS
      #      valueFrom:
      #        configMapKeyRef:
      #          name: "reo-kafka-brokers"
      #          key: brokers
      #    - name: KAFKA_APIKEY
      #      valueFrom:
      #        secretKeyRef:
      #          name: eventstreams-apikey
      #          key: binding
